{"version":3,"sources":["home.js"],"names":["removeIntro","$","fadeOut","clearInterval","advanceTimer","updateSlide","off","advanceSlide","rewindSlide","setTimeout","eq","currentSlide","fadeIn","removeClass","addClass","on","MAXSLIDES","setInterval","this","w","window","width","i","index","row","parent","rowi","each","children"],"mappings":"AAAA,YAcA,SAASA,eACPC,EAAE,UAAUC,QAAQ,KACpBC,cAAcC,cAShB,QAASC,eAEPJ,EAAE,iBAAiBK,IAAI,QAASC,cAChCN,EAAE,gBAAgBK,IAAI,QAASE,aAG/BP,EAAE,iBAAiBC,QAAQ,KAE3BO,WAAW,WACTR,EAAE,iBAAiBS,GAAGC,cAAcC,OAAO,KAG3CX,EAAE,kBAAkBY,YAAY,iBAChCZ,EAAE,kBAAkBS,GAAGC,cAAcG,SAAS,iBAG9Cb,EAAE,iBAAiBc,GAAG,QAASR,cAC/BN,EAAE,gBAAgBc,GAAG,QAASP,cAC7B,MAKL,QAASD,gBACPJ,cAAcC,cACVO,aAAeK,WACjBL,cAAgB,EAChBN,eAEAL,cAKJ,QAASQ,eACPL,cAAcC,cACVO,aAAe,IACjBA,cAAgB,EAChBN,eA3DJ,GAAIW,WAAY,EACZL,aAAe,CAenBV,GAAE,gBAAgBc,GAAG,QAASf,aAC9BC,EAAE,iBAAiBc,GAAG,QAASf,YAgD/B,IAAII,cAAea,YAAY,WAC7BV,gBACC,KAIHN,GAAE,iBAAiBc,GAAG,QAASR,cAC/BN,EAAE,gBAAgBc,GAAG,QAASP,aAS9BP,EAAE,eAAec,GAAG,YAAa,WAC/Bd,EAAE,eAAea,SAAS,eAC1Bb,EAAEiB,MAAML,YAAY,cAEpB,IAAIM,GAAIlB,EAAEmB,QAAQC,QACdC,EAAIrB,EAAEiB,MAAMK,QACZC,EAAMvB,EAAEiB,MAAMO,OAAO,cACrBC,EAAOzB,EAAEiB,MAAMO,OAAO,cAAcF,OAIxCtB,GAAE0B,KAAKH,EAAII,SAAS,eAAgB,WAC9B3B,EAAEiB,MAAMK,QAAUD,EACpBrB,EAAEiB,MAAMJ,SAAS,oBACRb,EAAEiB,MAAMK,QAAUD,GAC3BrB,EAAEiB,MAAMJ,SAAS,uBAOjBK,GAAK,KACPlB,EAAE0B,KAAK1B,EAAE,cAAe,WAClBA,EAAEiB,MAAMK,QAAUG,EACpBzB,EAAEiB,MAAMU,SAAS,eAAed,SAAS,oBAChCb,EAAEiB,MAAMK,QAAUG,GAC3BzB,EAAEiB,MAAMU,SAAS,eAAed,SAAS,yBAQjDb,EAAE,eAAec,GAAG,WAAY,WAC9Bd,EAAE,eAAeY,YAAY","file":"home.js","sourcesContent":["'use strict';\n\n/* global $:true window:true */\n\nvar MAXSLIDES = 4;\nvar currentSlide = 0;\n\n/*\n--------------------------------------\nCHANGING SLIDES\n--------------------------------------\n*/\n\n// removing the intro overlay if the skip intro button is clicked\nfunction removeIntro() {\n  $('#intro').fadeOut(1000);\n  clearInterval(advanceTimer);\n}\n\n// clicking the intro_skip button\n$('#intro__skip').on('click', removeIntro);\n$('#intro__begin').on('click', removeIntro);\n\n// updates the slide, moving forward or backward based on the currentSlide variables\n// also updates the slide nav at the bottom of the screen\nfunction updateSlide() {\n  // remove our click handlers so we don't gum up the works by advancing mid animation\n  $('#arrow__right').off('click', advanceSlide);\n  $('#arrow__left').off('click', rewindSlide);\n\n  // fade out current slide and fade in next/previous slide based on direction\n  $('.intro__slide').fadeOut(1000);\n\n  setTimeout(function () {\n    $('.intro__slide').eq(currentSlide).fadeIn(1000);\n\n    // update circles, making corresponding circle active\n    $('.slide__circle').removeClass('slide--active');\n    $('.slide__circle').eq(currentSlide).addClass('slide--active');\n\n    // advancing or rewinding based on which arrow is clicked\n    $('#arrow__right').on('click', advanceSlide);\n    $('#arrow__left').on('click', rewindSlide);\n  }, 1100);\n}\n\n// checks if we are not at the end of the slides yet. if not, update currentSlide and\n// update slides\nfunction advanceSlide() {\n  clearInterval(advanceTimer);\n  if (currentSlide < MAXSLIDES) {\n    currentSlide += 1;\n    updateSlide();\n  } else {\n    removeIntro();\n  }\n}\n\n// checks if we are at the first slie. if not, update currentSlide and update slides\nfunction rewindSlide() {\n  clearInterval(advanceTimer);\n  if (currentSlide > 0) {\n    currentSlide -= 1;\n    updateSlide();\n  }\n}\n\n// our timer that will auto advance the slider every 7.1 seconds\n// (2.1 seconds for animation, 5 seconds for read time)\nvar advanceTimer = setInterval(function () {\n  advanceSlide();\n}, 7100);\n\n// advancing or rewinding based on which arrow is clicked, if advanced, the auto\n// advancing timer is cleared\n$('#arrow__right').on('click', advanceSlide);\n$('#arrow__left').on('click', rewindSlide);\n\n/*\n--------------------------------------\nHOME GRID BEHAVIORS\n--------------------------------------\n*/\n\n// mousing over an individual lightens it and darkens all the rest\n$('.cast__item').on('mouseover', function () {\n  $('.cast__item').addClass('cast--faded');\n  $(this).removeClass('cast--faded');\n\n  var w = $(window).width();\n  var i = $(this).index();\n  var row = $(this).parent('.cast__row');\n  var rowi = $(this).parent('.cast__row').index();\n\n  // check all the other individuals in the row of the one hovered over\n  // if they come before, shift them left, after, shift them right\n  $.each(row.children('.cast__item'), function () {\n    if ($(this).index() < i) {\n      $(this).addClass('cast--shift-left');\n    } else if ($(this).index() > i) {\n      $(this).addClass('cast--shift-right');\n    }\n  });\n\n  // if we're on a window width smaller than 800, all the individuals are stacked\n  // on top of each other, not in two rows. This checks what row the individual is in\n  // and moves all the individuals in the other rows accordingly\n  if (w <= 800) {\n    $.each($('.cast__row'), function () {\n      if ($(this).index() < rowi) {\n        $(this).children('.cast__item').addClass('cast--shift-left');\n      } else if ($(this).index() > rowi) {\n        $(this).children('.cast__item').addClass('cast--shift-right');\n      }\n    });\n  }\n});\n\n// when we mouse out of all of the individuals, we're going to remove the shade\n// from them, restoring them to their natural order\n$('.cast__item').on('mouseout', function () {\n  $('.cast__item').removeClass('cast--faded cast--shift-left cast--shift-right');\n});"]}